// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTPDelivery.Server.DataBase;

#nullable disable

namespace PTPDelivery.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Carrier", b =>
                {
                    b.Property<int>("IdCarrier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrier"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarrier");

                    b.ToTable("carriers");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Document", b =>
                {
                    b.Property<int>("IdDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocument"));

                    b.Property<int?>("CarrierIdCarrier")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDocument");

                    b.HasIndex("CarrierIdCarrier");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrierIdCarrier")
                        .HasColumnType("int");

                    b.Property<string>("CurrentCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LuggageCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WayTravel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarrierIdCarrier");

                    b.ToTable("trip");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int?>("CarrierIdCarrier")
                        .HasColumnType("int");

                    b.Property<string>("Deadline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPriority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderIdSender")
                        .HasColumnType("int");

                    b.Property<string>("SpecialInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdItem");

                    b.HasIndex("CarrierIdCarrier");

                    b.HasIndex("SenderIdSender");

                    b.ToTable("items");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Payment", b =>
                {
                    b.Property<int>("IdPayement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayement"));

                    b.Property<int?>("CarrierIdCarrier")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferencePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderIdSender")
                        .HasColumnType("int");

                    b.HasKey("IdPayement");

                    b.HasIndex("CarrierIdCarrier");

                    b.HasIndex("SenderIdSender");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Review", b =>
                {
                    b.Property<int>("IdReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReview"));

                    b.Property<int?>("CarrierIdCarrier")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderIdSender")
                        .HasColumnType("int");

                    b.HasKey("IdReview");

                    b.HasIndex("CarrierIdCarrier");

                    b.HasIndex("SenderIdSender");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Sender.Sender", b =>
                {
                    b.Property<int>("IdSender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSender"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSender");

                    b.ToTable("senders");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Document", b =>
                {
                    b.HasOne("PTPDelivery.Server.Models.Carrier.Carrier", null)
                        .WithMany("Documents")
                        .HasForeignKey("CarrierIdCarrier");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Trip", b =>
                {
                    b.HasOne("PTPDelivery.Server.Models.Carrier.Carrier", null)
                        .WithMany("trips")
                        .HasForeignKey("CarrierIdCarrier");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Item", b =>
                {
                    b.HasOne("PTPDelivery.Server.Models.Carrier.Carrier", null)
                        .WithMany("Items")
                        .HasForeignKey("CarrierIdCarrier");

                    b.HasOne("PTPDelivery.Server.Models.Sender.Sender", null)
                        .WithMany("Items")
                        .HasForeignKey("SenderIdSender");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Payment", b =>
                {
                    b.HasOne("PTPDelivery.Server.Models.Carrier.Carrier", null)
                        .WithMany("payments")
                        .HasForeignKey("CarrierIdCarrier");

                    b.HasOne("PTPDelivery.Server.Models.Sender.Sender", null)
                        .WithMany("payments")
                        .HasForeignKey("SenderIdSender");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Review", b =>
                {
                    b.HasOne("PTPDelivery.Server.Models.Carrier.Carrier", null)
                        .WithMany("Reviews")
                        .HasForeignKey("CarrierIdCarrier");

                    b.HasOne("PTPDelivery.Server.Models.Sender.Sender", null)
                        .WithMany("reviews")
                        .HasForeignKey("SenderIdSender");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Carrier.Carrier", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Items");

                    b.Navigation("Reviews");

                    b.Navigation("payments");

                    b.Navigation("trips");
                });

            modelBuilder.Entity("PTPDelivery.Server.Models.Sender.Sender", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("payments");

                    b.Navigation("reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
